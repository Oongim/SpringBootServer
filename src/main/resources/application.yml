spring:

    datasource:
        url: jdbc:mysql://toyprojectrdb.cthvwllc47di.ap-northeast-2.rds.amazonaws.com:3306/dev?autoReconnect=true
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: admin
        password: N4UId2CiV426odXgdl4t

    jpa:
        hibernate:
            ddl-auto: update

jwt:
    header: Authorization
    secret: hjkdfhlASDJKFDkljsdfhskldfjhASDKLJSDFGHklasdjFhFKLDJADHFAKLJADKLJFhdKLFjDHFklsdjFskdjlFFKLJDs
    token-validity-in-seconds: 86400

# DataSource
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=
#spring.datasource.username=admin
#spring.datasource.password=N4UId2CiV426odXgdl4t
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#spring.jwt


#spring.jpa.hibernate.ddl-auto=update
# 여기서 spring.jpa.hibernate.ddl-auto은 none, update, create또는 create-drop입니다. 자세한 내용은 Hibernate 문서 를 참조하십시오.

# none: 에 대한 기본값입니다 MySQL. 데이터베이스 구조는 변경되지 않습니다.
# update: Hibernate는 주어진 엔티티 구조에 따라 데이터베이스를 변경한다.
# create: 매번 데이터베이스를 생성하지만 닫을 때 삭제하지 않습니다.
# create-drop: 데이터베이스를 생성하고 SessionFactory닫힐 때 삭제합니다.

# 아직 데이터베이스 구조가 없기 때문에 create또는 update로 시작해야 합니다 .
#  처음 실행한 후 프로그램 요구 사항에 따라 none 또는 update로 전환할 수 있습니다 . 
#  데이터베이스 구조를 변경하려는 경우 update를 사용 합니다.

#  H2및 기타 내장 데이터베이스 의 기본값 은 create-drop입니다. MySQL와 같은 다른 데이터베이스의 경우 기본값은 none입니다.


# 데이터베이스가 프로덕션 상태가 된 후 이를 none으로 설정하고 
# Spring 애플리케이션에 연결된 MySQL 사용자의 모든 권한을 취소하고 SELECT, UPDATE, INSERT및 DELETE만을 허용하도록 합니다.
#https://spring.io/guides/gs/accessing-data-mysql/