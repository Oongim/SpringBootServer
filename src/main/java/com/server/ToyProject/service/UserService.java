package com.server.ToyProject.service;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.server.ToyProject.dto.User.LoginUserDto;
import com.server.ToyProject.entity.User;
import com.server.ToyProject.repository.UserRepository;

import java.time.LocalDate;
import java.util.Date;
import java.util.List;

@Service
public class UserService {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    public void createUser(String name, String email){
        User n = new User(name,email);
        userRepository.save(n);

    }

    @Transactional  // Entity는 Transaction이 종료되면 변경된 필드를 자동으로 감지하여 db에 commit을 해줍니다. 이와 같은 개념이 Dirty Checking 입니다. //https://jessyt.tistory.com/35
    public void loginUser(LoginUserDto dto){
        User user = userRepository.findByUuid(dto.getUuid());
        if(user == null){
            User n = new User(dto.getUuid(),dto.getEmail());
            user = userRepository.save(n);
        }
        Date now = new Date();
        user.setLastLoginAt(now);
    }

    public Iterable<User> findAll(){
        return userRepository.findAll();
    }
}
